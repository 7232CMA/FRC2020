// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc7232.FRC7232.subsystems;


import org.usfirst.frc7232.FRC7232.RobotMap;
import org.usfirst.frc7232.FRC7232.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Talon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Talon leftFront;
    private Talon leftRear;
    private Talon rightFront;
    private Talon rightRear;
    DifferentialDrive differentialDrive;


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        //setting motor to ports which defined in Robot Map
        leftFront = new Talon(RobotMap.DRIVETRAIN_LEFT_FRONT_Talon);
        leftFront.setInverted(false);
        
        leftRear = new Talon(RobotMap.DRIVETRAIN_LEFT_REAR_Talon);
        leftRear.setInverted(false);
        
        rightFront = new Talon(RobotMap.DRIVETRAIN_RIGHT_FRONT_Talon);
        rightFront.setInverted(false);
        
        rightRear = new Talon(RobotMap.DRIVETRAIN_RIGHT_REAR_Talon);
        rightRear.setInverted(false);
       
        //setting motor to speed functions 
        SpeedControllerGroup leftDriveMotor = new SpeedControllerGroup(leftFront, leftRear);
        SpeedControllerGroup rightDriveMotor = new SpeedControllerGroup(rightFront, rightRear);

        differentialDrive = new DifferentialDrive(leftDriveMotor, rightDriveMotor);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        ///setDefaultCommand(new MySpecialCommand());
        
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void tankDrive(double leftSpeed, double rightSpeed){
        differentialDrive.tankDrive(leftSpeed, rightSpeed, true);
    }
}

